import express from 'express';
import * as userController from '../controller/userController';
import * as middleware from '../middleware/authMiddleware';
import * as upload from '../middleware/uploadFile';
const userRouter = express.Router();
userRouter.post('/register', userController.addUser);
userRouter.post('/login', userController.loginUser);
userRouter.patch('/update-password/:id', middleware.authUserMiddleware, userController.updatePassword);
userRouter.get('/get-detail/:id', middleware.authUserMiddleware, userController.getDetailUser);
userRouter.get('/getAll', middleware.authMiddleware, userController.getAllUser);
userRouter.get('/getAll-into-trash', middleware.authMiddleware, userController.getAllUserIntoTrash);
userRouter.patch('/update/:id', middleware.authUserMiddleware, upload.uploadImage, userController.updateUser);
userRouter.patch('/update-private/:id', middleware.authMiddleware, userController.updatePrivateUser);
userRouter.patch('/move-to-trash', middleware.authMiddleware, userController.moveManyUsersToTrash);
userRouter.patch('/restore-users', middleware.authMiddleware, userController.restoreManyUsers);
userRouter.delete('/delete-users', middleware.authMiddleware, userController.deleteManyUser);
userRouter.post('/follow/:id', middleware.authUserMiddleware, userController.userFollow);
userRouter.post('/favorite/:id', middleware.authUserMiddleware, userController.userFavorite);
userRouter.post('/refresh-token', userController.refreshToken);
userRouter.post('/favorite-album/:id', middleware.authUserMiddleware, userController.userFavoriteAlbum);
userRouter.get('/check-follow', userController.checkUserFollow);
userRouter.get('/get-singer-follow/:id', middleware.authUserMiddleware, userController.getAllSingerFollow);
export default userRouter;
